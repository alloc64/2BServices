/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.twobid.googleads.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import net.twobid.googleads.api.model.AdTextAssetDto;
import net.twobid.googleads.api.model.AdVideoAssetDto;
/**
 * AppAdInfoDto
 */



public class AppAdInfoDto {
  @SerializedName("headlines")
  private List<AdTextAssetDto> headlines = null;

  @SerializedName("descriptions")
  private List<AdTextAssetDto> descriptions = null;

  @SerializedName("youtubeVideos")
  private List<AdVideoAssetDto> youtubeVideos = null;

  public AppAdInfoDto headlines(List<AdTextAssetDto> headlines) {
    this.headlines = headlines;
    return this;
  }

  public AppAdInfoDto addHeadlinesItem(AdTextAssetDto headlinesItem) {
    if (this.headlines == null) {
      this.headlines = new ArrayList<>();
    }
    this.headlines.add(headlinesItem);
    return this;
  }

   /**
   * Get headlines
   * @return headlines
  **/
  @Schema(description = "")
  public List<AdTextAssetDto> getHeadlines() {
    return headlines;
  }

  public void setHeadlines(List<AdTextAssetDto> headlines) {
    this.headlines = headlines;
  }

  public AppAdInfoDto descriptions(List<AdTextAssetDto> descriptions) {
    this.descriptions = descriptions;
    return this;
  }

  public AppAdInfoDto addDescriptionsItem(AdTextAssetDto descriptionsItem) {
    if (this.descriptions == null) {
      this.descriptions = new ArrayList<>();
    }
    this.descriptions.add(descriptionsItem);
    return this;
  }

   /**
   * Get descriptions
   * @return descriptions
  **/
  @Schema(description = "")
  public List<AdTextAssetDto> getDescriptions() {
    return descriptions;
  }

  public void setDescriptions(List<AdTextAssetDto> descriptions) {
    this.descriptions = descriptions;
  }

  public AppAdInfoDto youtubeVideos(List<AdVideoAssetDto> youtubeVideos) {
    this.youtubeVideos = youtubeVideos;
    return this;
  }

  public AppAdInfoDto addYoutubeVideosItem(AdVideoAssetDto youtubeVideosItem) {
    if (this.youtubeVideos == null) {
      this.youtubeVideos = new ArrayList<>();
    }
    this.youtubeVideos.add(youtubeVideosItem);
    return this;
  }

   /**
   * Get youtubeVideos
   * @return youtubeVideos
  **/
  @Schema(description = "")
  public List<AdVideoAssetDto> getYoutubeVideos() {
    return youtubeVideos;
  }

  public void setYoutubeVideos(List<AdVideoAssetDto> youtubeVideos) {
    this.youtubeVideos = youtubeVideos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppAdInfoDto appAdInfoDto = (AppAdInfoDto) o;
    return Objects.equals(this.headlines, appAdInfoDto.headlines) &&
        Objects.equals(this.descriptions, appAdInfoDto.descriptions) &&
        Objects.equals(this.youtubeVideos, appAdInfoDto.youtubeVideos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headlines, descriptions, youtubeVideos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppAdInfoDto {\n");
    
    sb.append("    headlines: ").append(toIndentedString(headlines)).append("\n");
    sb.append("    descriptions: ").append(toIndentedString(descriptions)).append("\n");
    sb.append("    youtubeVideos: ").append(toIndentedString(youtubeVideos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
