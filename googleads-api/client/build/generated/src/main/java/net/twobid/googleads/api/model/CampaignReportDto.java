/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.twobid.googleads.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.LocalDate;
/**
 * CampaignReportDto
 */



public class CampaignReportDto {
  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("customerId")
  private Long customerId = null;

  @SerializedName("campaignId")
  private Long campaignId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("packageName")
  private String packageName = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("impressions")
  private Long impressions = null;

  @SerializedName("clicks")
  private Long clicks = null;

  @SerializedName("ctr")
  private Double ctr = null;

  @SerializedName("conversions")
  private Double conversions = null;

  @SerializedName("conversionValue")
  private Double conversionValue = null;

  @SerializedName("viewThroughConversions")
  private Double viewThroughConversions = null;

  @SerializedName("conversionRate")
  private Double conversionRate = null;

  @SerializedName("cost")
  private Double cost = null;

  @SerializedName("currency")
  private String currency = null;

  public CampaignReportDto date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public CampaignReportDto customerId(Long customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(description = "")
  public Long getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Long customerId) {
    this.customerId = customerId;
  }

  public CampaignReportDto campaignId(Long campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Get campaignId
   * @return campaignId
  **/
  @Schema(description = "")
  public Long getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(Long campaignId) {
    this.campaignId = campaignId;
  }

  public CampaignReportDto name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CampaignReportDto packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

   /**
   * Get packageName
   * @return packageName
  **/
  @Schema(description = "")
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }

  public CampaignReportDto country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @Schema(description = "")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public CampaignReportDto impressions(Long impressions) {
    this.impressions = impressions;
    return this;
  }

   /**
   * Get impressions
   * @return impressions
  **/
  @Schema(description = "")
  public Long getImpressions() {
    return impressions;
  }

  public void setImpressions(Long impressions) {
    this.impressions = impressions;
  }

  public CampaignReportDto clicks(Long clicks) {
    this.clicks = clicks;
    return this;
  }

   /**
   * Get clicks
   * @return clicks
  **/
  @Schema(description = "")
  public Long getClicks() {
    return clicks;
  }

  public void setClicks(Long clicks) {
    this.clicks = clicks;
  }

  public CampaignReportDto ctr(Double ctr) {
    this.ctr = ctr;
    return this;
  }

   /**
   * Get ctr
   * @return ctr
  **/
  @Schema(description = "")
  public Double getCtr() {
    return ctr;
  }

  public void setCtr(Double ctr) {
    this.ctr = ctr;
  }

  public CampaignReportDto conversions(Double conversions) {
    this.conversions = conversions;
    return this;
  }

   /**
   * Get conversions
   * @return conversions
  **/
  @Schema(description = "")
  public Double getConversions() {
    return conversions;
  }

  public void setConversions(Double conversions) {
    this.conversions = conversions;
  }

  public CampaignReportDto conversionValue(Double conversionValue) {
    this.conversionValue = conversionValue;
    return this;
  }

   /**
   * Get conversionValue
   * @return conversionValue
  **/
  @Schema(description = "")
  public Double getConversionValue() {
    return conversionValue;
  }

  public void setConversionValue(Double conversionValue) {
    this.conversionValue = conversionValue;
  }

  public CampaignReportDto viewThroughConversions(Double viewThroughConversions) {
    this.viewThroughConversions = viewThroughConversions;
    return this;
  }

   /**
   * Get viewThroughConversions
   * @return viewThroughConversions
  **/
  @Schema(description = "")
  public Double getViewThroughConversions() {
    return viewThroughConversions;
  }

  public void setViewThroughConversions(Double viewThroughConversions) {
    this.viewThroughConversions = viewThroughConversions;
  }

  public CampaignReportDto conversionRate(Double conversionRate) {
    this.conversionRate = conversionRate;
    return this;
  }

   /**
   * Get conversionRate
   * @return conversionRate
  **/
  @Schema(description = "")
  public Double getConversionRate() {
    return conversionRate;
  }

  public void setConversionRate(Double conversionRate) {
    this.conversionRate = conversionRate;
  }

  public CampaignReportDto cost(Double cost) {
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @Schema(description = "")
  public Double getCost() {
    return cost;
  }

  public void setCost(Double cost) {
    this.cost = cost;
  }

  public CampaignReportDto currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignReportDto campaignReportDto = (CampaignReportDto) o;
    return Objects.equals(this.date, campaignReportDto.date) &&
        Objects.equals(this.customerId, campaignReportDto.customerId) &&
        Objects.equals(this.campaignId, campaignReportDto.campaignId) &&
        Objects.equals(this.name, campaignReportDto.name) &&
        Objects.equals(this.packageName, campaignReportDto.packageName) &&
        Objects.equals(this.country, campaignReportDto.country) &&
        Objects.equals(this.impressions, campaignReportDto.impressions) &&
        Objects.equals(this.clicks, campaignReportDto.clicks) &&
        Objects.equals(this.ctr, campaignReportDto.ctr) &&
        Objects.equals(this.conversions, campaignReportDto.conversions) &&
        Objects.equals(this.conversionValue, campaignReportDto.conversionValue) &&
        Objects.equals(this.viewThroughConversions, campaignReportDto.viewThroughConversions) &&
        Objects.equals(this.conversionRate, campaignReportDto.conversionRate) &&
        Objects.equals(this.cost, campaignReportDto.cost) &&
        Objects.equals(this.currency, campaignReportDto.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, customerId, campaignId, name, packageName, country, impressions, clicks, ctr, conversions, conversionValue, viewThroughConversions, conversionRate, cost, currency);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignReportDto {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    impressions: ").append(toIndentedString(impressions)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    ctr: ").append(toIndentedString(ctr)).append("\n");
    sb.append("    conversions: ").append(toIndentedString(conversions)).append("\n");
    sb.append("    conversionValue: ").append(toIndentedString(conversionValue)).append("\n");
    sb.append("    viewThroughConversions: ").append(toIndentedString(viewThroughConversions)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
