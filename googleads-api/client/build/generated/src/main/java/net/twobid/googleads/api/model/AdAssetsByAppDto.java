/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.twobid.googleads.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import net.twobid.googleads.api.model.AdAssetDto;
import net.twobid.googleads.api.model.CampaignDto;
/**
 * AdAssetsByAppDto
 */



public class AdAssetsByAppDto {
  @SerializedName("packageName")
  private String packageName = null;

  @SerializedName("campaigns")
  private List<CampaignDto> campaigns = null;

  @SerializedName("assetsByCampaignId")
  private Map<String, List<AdAssetDto>> assetsByCampaignId = null;

  public AdAssetsByAppDto packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

   /**
   * Get packageName
   * @return packageName
  **/
  @Schema(description = "")
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }

  public AdAssetsByAppDto campaigns(List<CampaignDto> campaigns) {
    this.campaigns = campaigns;
    return this;
  }

  public AdAssetsByAppDto addCampaignsItem(CampaignDto campaignsItem) {
    if (this.campaigns == null) {
      this.campaigns = new ArrayList<>();
    }
    this.campaigns.add(campaignsItem);
    return this;
  }

   /**
   * Get campaigns
   * @return campaigns
  **/
  @Schema(description = "")
  public List<CampaignDto> getCampaigns() {
    return campaigns;
  }

  public void setCampaigns(List<CampaignDto> campaigns) {
    this.campaigns = campaigns;
  }

  public AdAssetsByAppDto assetsByCampaignId(Map<String, List<AdAssetDto>> assetsByCampaignId) {
    this.assetsByCampaignId = assetsByCampaignId;
    return this;
  }

  public AdAssetsByAppDto putAssetsByCampaignIdItem(String key, List<AdAssetDto> assetsByCampaignIdItem) {
    if (this.assetsByCampaignId == null) {
      this.assetsByCampaignId = new HashMap<>();
    }
    this.assetsByCampaignId.put(key, assetsByCampaignIdItem);
    return this;
  }

   /**
   * Get assetsByCampaignId
   * @return assetsByCampaignId
  **/
  @Schema(description = "")
  public Map<String, List<AdAssetDto>> getAssetsByCampaignId() {
    return assetsByCampaignId;
  }

  public void setAssetsByCampaignId(Map<String, List<AdAssetDto>> assetsByCampaignId) {
    this.assetsByCampaignId = assetsByCampaignId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdAssetsByAppDto adAssetsByAppDto = (AdAssetsByAppDto) o;
    return Objects.equals(this.packageName, adAssetsByAppDto.packageName) &&
        Objects.equals(this.campaigns, adAssetsByAppDto.campaigns) &&
        Objects.equals(this.assetsByCampaignId, adAssetsByAppDto.assetsByCampaignId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(packageName, campaigns, assetsByCampaignId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdAssetsByAppDto {\n");
    
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    assetsByCampaignId: ").append(toIndentedString(assetsByCampaignId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
