/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.twobid.googleads.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AdAssetDto
 */



public class AdAssetDto {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("youtubeVideoId")
  private String youtubeVideoId = null;

  /**
   * Gets or Sets fieldType
   */
  @JsonAdapter(FieldTypeEnum.Adapter.class)
  public enum FieldTypeEnum {
    UNSPECIFIED("UNSPECIFIED"),
    UNKNOWN("UNKNOWN"),
    HEADLINE("HEADLINE"),
    DESCRIPTION("DESCRIPTION"),
    MANDATORY_AD_TEXT("MANDATORY_AD_TEXT"),
    MARKETING_IMAGE("MARKETING_IMAGE"),
    MEDIA_BUNDLE("MEDIA_BUNDLE"),
    YOUTUBE_VIDEO("YOUTUBE_VIDEO"),
    BOOK_ON_GOOGLE("BOOK_ON_GOOGLE"),
    LEAD_FORM("LEAD_FORM"),
    PROMOTION("PROMOTION"),
    CALLOUT("CALLOUT"),
    STRUCTURED_SNIPPET("STRUCTURED_SNIPPET"),
    SITELINK("SITELINK"),
    MOBILE_APP("MOBILE_APP"),
    HOTEL_CALLOUT("HOTEL_CALLOUT"),
    CALL("CALL"),
    PRICE("PRICE"),
    LONG_HEADLINE("LONG_HEADLINE"),
    BUSINESS_NAME("BUSINESS_NAME"),
    SQUARE_MARKETING_IMAGE("SQUARE_MARKETING_IMAGE"),
    PORTRAIT_MARKETING_IMAGE("PORTRAIT_MARKETING_IMAGE"),
    LOGO("LOGO"),
    LANDSCAPE_LOGO("LANDSCAPE_LOGO"),
    VIDEO("VIDEO"),
    CALL_TO_ACTION_SELECTION("CALL_TO_ACTION_SELECTION"),
    AD_IMAGE("AD_IMAGE"),
    UNRECOGNIZED("UNRECOGNIZED");

    private String value;

    FieldTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FieldTypeEnum fromValue(String input) {
      for (FieldTypeEnum b : FieldTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FieldTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FieldTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FieldTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FieldTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("fieldType")
  private FieldTypeEnum fieldType = null;

  /**
   * Gets or Sets performanceLabel
   */
  @JsonAdapter(PerformanceLabelEnum.Adapter.class)
  public enum PerformanceLabelEnum {
    UNSPECIFIED("UNSPECIFIED"),
    UNKNOWN("UNKNOWN"),
    PENDING("PENDING"),
    LEARNING("LEARNING"),
    LOW("LOW"),
    GOOD("GOOD"),
    BEST("BEST"),
    UNRECOGNIZED("UNRECOGNIZED");

    private String value;

    PerformanceLabelEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PerformanceLabelEnum fromValue(String input) {
      for (PerformanceLabelEnum b : PerformanceLabelEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PerformanceLabelEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PerformanceLabelEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PerformanceLabelEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PerformanceLabelEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("performanceLabel")
  private PerformanceLabelEnum performanceLabel = null;

  public AdAssetDto id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public AdAssetDto text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @Schema(description = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public AdAssetDto youtubeVideoId(String youtubeVideoId) {
    this.youtubeVideoId = youtubeVideoId;
    return this;
  }

   /**
   * Get youtubeVideoId
   * @return youtubeVideoId
  **/
  @Schema(description = "")
  public String getYoutubeVideoId() {
    return youtubeVideoId;
  }

  public void setYoutubeVideoId(String youtubeVideoId) {
    this.youtubeVideoId = youtubeVideoId;
  }

  public AdAssetDto fieldType(FieldTypeEnum fieldType) {
    this.fieldType = fieldType;
    return this;
  }

   /**
   * Get fieldType
   * @return fieldType
  **/
  @Schema(required = true, description = "")
  public FieldTypeEnum getFieldType() {
    return fieldType;
  }

  public void setFieldType(FieldTypeEnum fieldType) {
    this.fieldType = fieldType;
  }

  public AdAssetDto performanceLabel(PerformanceLabelEnum performanceLabel) {
    this.performanceLabel = performanceLabel;
    return this;
  }

   /**
   * Get performanceLabel
   * @return performanceLabel
  **/
  @Schema(description = "")
  public PerformanceLabelEnum getPerformanceLabel() {
    return performanceLabel;
  }

  public void setPerformanceLabel(PerformanceLabelEnum performanceLabel) {
    this.performanceLabel = performanceLabel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdAssetDto adAssetDto = (AdAssetDto) o;
    return Objects.equals(this.id, adAssetDto.id) &&
        Objects.equals(this.text, adAssetDto.text) &&
        Objects.equals(this.youtubeVideoId, adAssetDto.youtubeVideoId) &&
        Objects.equals(this.fieldType, adAssetDto.fieldType) &&
        Objects.equals(this.performanceLabel, adAssetDto.performanceLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, text, youtubeVideoId, fieldType, performanceLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdAssetDto {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    youtubeVideoId: ").append(toIndentedString(youtubeVideoId)).append("\n");
    sb.append("    fieldType: ").append(toIndentedString(fieldType)).append("\n");
    sb.append("    performanceLabel: ").append(toIndentedString(performanceLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
