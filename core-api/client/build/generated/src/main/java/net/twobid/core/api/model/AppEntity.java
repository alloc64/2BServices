/*
 * OpenAPI definition
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.twobid.core.api.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * AppEntity
 */



public class AppEntity {
  @SerializedName("bundleId")
  private String bundleId = null;

  @SerializedName("userId")
  private String userId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("purchasesKey")
  private String purchasesKey = null;

  @SerializedName("iconUrl")
  private String iconUrl = null;

  @SerializedName("firebaseAnalyticsDatasetName")
  private String firebaseAnalyticsDatasetName = null;

  @SerializedName("appToken")
  private String appToken = null;

  @SerializedName("publishToken")
  private String publishToken = null;

  @SerializedName("published")
  private Boolean published = null;

  public AppEntity bundleId(String bundleId) {
    this.bundleId = bundleId;
    return this;
  }

   /**
   * Get bundleId
   * @return bundleId
  **/
  @Schema(required = true, description = "")
  public String getBundleId() {
    return bundleId;
  }

  public void setBundleId(String bundleId) {
    this.bundleId = bundleId;
  }

  public AppEntity userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public AppEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AppEntity purchasesKey(String purchasesKey) {
    this.purchasesKey = purchasesKey;
    return this;
  }

   /**
   * Get purchasesKey
   * @return purchasesKey
  **/
  @Schema(description = "")
  public String getPurchasesKey() {
    return purchasesKey;
  }

  public void setPurchasesKey(String purchasesKey) {
    this.purchasesKey = purchasesKey;
  }

  public AppEntity iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * Get iconUrl
   * @return iconUrl
  **/
  @Schema(description = "")
  public String getIconUrl() {
    return iconUrl;
  }

  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }

  public AppEntity firebaseAnalyticsDatasetName(String firebaseAnalyticsDatasetName) {
    this.firebaseAnalyticsDatasetName = firebaseAnalyticsDatasetName;
    return this;
  }

   /**
   * Get firebaseAnalyticsDatasetName
   * @return firebaseAnalyticsDatasetName
  **/
  @Schema(description = "")
  public String getFirebaseAnalyticsDatasetName() {
    return firebaseAnalyticsDatasetName;
  }

  public void setFirebaseAnalyticsDatasetName(String firebaseAnalyticsDatasetName) {
    this.firebaseAnalyticsDatasetName = firebaseAnalyticsDatasetName;
  }

  public AppEntity appToken(String appToken) {
    this.appToken = appToken;
    return this;
  }

   /**
   * Get appToken
   * @return appToken
  **/
  @Schema(description = "")
  public String getAppToken() {
    return appToken;
  }

  public void setAppToken(String appToken) {
    this.appToken = appToken;
  }

  public AppEntity publishToken(String publishToken) {
    this.publishToken = publishToken;
    return this;
  }

   /**
   * Get publishToken
   * @return publishToken
  **/
  @Schema(description = "")
  public String getPublishToken() {
    return publishToken;
  }

  public void setPublishToken(String publishToken) {
    this.publishToken = publishToken;
  }

  public AppEntity published(Boolean published) {
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
  @Schema(description = "")
  public Boolean isPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppEntity appEntity = (AppEntity) o;
    return Objects.equals(this.bundleId, appEntity.bundleId) &&
        Objects.equals(this.userId, appEntity.userId) &&
        Objects.equals(this.name, appEntity.name) &&
        Objects.equals(this.purchasesKey, appEntity.purchasesKey) &&
        Objects.equals(this.iconUrl, appEntity.iconUrl) &&
        Objects.equals(this.firebaseAnalyticsDatasetName, appEntity.firebaseAnalyticsDatasetName) &&
        Objects.equals(this.appToken, appEntity.appToken) &&
        Objects.equals(this.publishToken, appEntity.publishToken) &&
        Objects.equals(this.published, appEntity.published);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bundleId, userId, name, purchasesKey, iconUrl, firebaseAnalyticsDatasetName, appToken, publishToken, published);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppEntity {\n");
    
    sb.append("    bundleId: ").append(toIndentedString(bundleId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    purchasesKey: ").append(toIndentedString(purchasesKey)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    firebaseAnalyticsDatasetName: ").append(toIndentedString(firebaseAnalyticsDatasetName)).append("\n");
    sb.append("    appToken: ").append(toIndentedString(appToken)).append("\n");
    sb.append("    publishToken: ").append(toIndentedString(publishToken)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
